# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/master/ci/cmake-multi-platform.yml
name: CMake on a ubuntu and macos

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # https://github.com/actions/runner-images
        os: [ubuntu-latest, ubuntu-20.04, macos-latest, macos-latest-large, macos-13, macos-12]

    steps:
    - uses: actions/checkout@v3

    - name: Install libevent and openssl on ubuntu
      if: ${{ startsWith(matrix.os, 'ubuntu') }}
      run: sudo apt-get update && sudo apt-get install -y libevent-dev libssl-dev

    - name: Install libevent and openssl on macos
      if: ${{ startsWith(matrix.os, 'macos') }}
      run: brew install libevent

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Install shadowsocks on ubuntu
      if: ${{ startsWith(matrix.os, 'ubuntu') }}
      run: sudo apt-get install -y shadowsocks-libev

    - name: Install shadowsocks on macos
      if: ${{ startsWith(matrix.os, 'macos') }}
      run: brew install shadowsocks-libev v2ray-plugin

    - name: Install PySocks
      run: pip3 install PySocks

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}} -V

