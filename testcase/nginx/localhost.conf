map $http_upgrade$http2$http3$request_method $proxy_http_upgrade {
    '~websocket' websocket;
    'h2CONNECT'  websocket;
    'h3CONNECT'  websocket;
    default      '';
}

map $proxy_http_upgrade $proxy_http_connection {
    '~websocket' Upgrade;
    default      '';
}

map $http_sec_websocket_key $proxy_http_sec_websocket_key {
    ''           dGhlIHNhbXBsZSBub25jZQ==;
    default      $http_sec_websocket_key;
}

server {
    listen 443 ssl;
    listen 443 quic reuseport;
    http2 on;

    ssl_certificate /etc/nginx/conf.d/localhost.crt;
    ssl_certificate_key /etc/nginx/conf.d/localhost.key;

    location /ok {
        return 200;
    }

    location / {
        if ($proxy_http_upgrade = websocket) {
            proxy_pass http://host.docker.internal:8888;
        }
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $proxy_http_upgrade;
        proxy_set_header Connection $proxy_http_connection;
        proxy_set_header Sec-WebSocket-Key $proxy_http_sec_websocket_key;
    }
}